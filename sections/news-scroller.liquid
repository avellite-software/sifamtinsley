{% comment %}
  Section: News Scroller
  - V3 Changes:
    - Auto-scroll now triggers if total content width is > 1200px.
{% endcomment %}

<style>
  .news-scroller-section {
    padding: 60px 0;
    background-color: #f9f9f9;
  }
  .news-scroller-header {
    max-width: 1200px;
    margin: 0 auto 30px auto;
    padding: 0 20px;
  }
  .news-scroller-heading {
    font-size: 28px;
    font-weight: 700;
    color: #1c1c1c;
    margin: 0;
    font-family: {{ settings.font_heading.family }}, {{ settings.font_heading.fallback_families }};
  }
  .news-scroller-container {
    display: flex;
    gap: 20px;
    overflow-x: auto;
    padding: 20px;
    cursor: grab;
    user-select: none;
    scrollbar-width: none;
    -ms-overflow-style: none;
  }
  /* Center items if there are too few to scroll */
  .news-scroller-container.not-scrollable {
    justify-content: center;
  }
  .news-scroller-container::-webkit-scrollbar {
    display: none;
  }
  .news-scroller-container.is-dragging {
    cursor: grabbing;
  }
  .news-card {
    flex: 0 0 320px;
    background-color: #fff;
    border-radius: 16px;
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.07);
    overflow: hidden;
    display: flex;
    flex-direction: column;
    color: #333;
  }
  .news-card-image-link {
    display: block;
    aspect-ratio: 1 / 1; /* Square aspect ratio */
  }
  .news-card-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    pointer-events: none;
  }
  .news-card-content {
    padding: 25px;
    display: flex;
    flex-direction: column;
    flex-grow: 1;
  }
  .news-card-meta {
    font-size: 13px;
    color: #777;
    margin-bottom: 10px;
    font-family: {{ settings.font_body.family }}, {{ settings.font_body.fallback_families }};
  }
  .news-card-title {
    font-size: 20px;
    font-weight: 700;
    margin: 0 0 10px;
    color: #1c1c1c;
    line-height: 1.4;
    text-decoration: none;
  }
  .news-card-excerpt {
    font-size: 15px;
    line-height: 1.6;
    margin: 0;
    flex-grow: 1;
    font-family: {{ settings.font_body.family }}, {{ settings.font_body.fallback_families }};
  }
  .news-card-read-more {
    display: inline-block;
    margin-top: 20px;
    padding: 10px 22px;
    background: #c1151b;
    color: #fff;
    border: 1px solid #c1151b;
    border-radius: 4px;
    text-decoration: none;
    font-weight: 500;
    font-size: 16px;
    text-align: center;
    transition: background-color 0.2s, color 0.2s;
    align-self: flex-start;
  }
  .news-card-read-more:hover {
    background: #a10f16;
    color: #fff;
  }
  .news-scroller-footer {
    max-width: 1200px;
    margin: 30px auto 0 auto;
    padding: 0 20px;
    text-align: center;
  }
  .news-scroller-see-all {
    display: inline-block;
    padding: 12px 28px;
    border-radius: 4px;
    background: #fff;
    color: #c1151b;
    border: 1px solid #ddd;
    font-weight: 600;
    text-decoration: none;
    font-size: 16px;
    transition: background 0.2s, color 0.2s, border-color 0.2s;
  }
  .news-scroller-see-all:hover {
    background: #c1151b;
    border-color: #c1151b;
    color: #fff;
  }
  @media (max-width: 768px) {
    .news-card {
      flex-basis: 280px;
    }
    .news-scroller-container {
      padding: 20px 15px;
      gap: 15px;
    }
  }
</style>

<div class="news-scroller-section">
  <div class="news-scroller-header">
    {% if section.settings.heading != blank %}
      <h2 class="news-scroller-heading">{{ section.settings.heading | escape }}</h2>
    {% endif %}
  </div>

  <div class="news-scroller-container" data-section-id="{{ section.id }}">
    {%- liquid
      assign blog = blogs[section.settings.blog]
    -%}
    {%- for article in blog.articles limit: section.settings.posts_to_show -%}
      <div class="news-card">
        {%- if article.image -%}
          <a href="{{ article.url }}" class="news-card-image-link">
            {{
              article.image
              | image_url: width: 320, height: 320, crop: 'center'
              | image_tag: loading: 'lazy', class: 'news-card-image'
            }}
          </a>
        {%- else -%}
          <div class="news-card-image-link">
            {{ 'lifestyle-1' | placeholder_svg_tag: 'placeholder-svg news-card-image' }}
          </div>
        {%- endif -%}
        <div class="news-card-content">
          <div class="news-card-meta">
            {%- if section.settings.show_date -%}
              <span>{{ article.published_at | time_tag: format: 'date' }}</span>
            {%- endif -%}
            {%- if section.settings.show_author and section.settings.show_date %} | {% endif %}
            {%- if section.settings.show_author -%}
              <span>by {{ article.author }}</span>
            {%- endif -%}
          </div>
          <h3 class="news-card-title">
            <a href="{{ article.url }}" style="color: inherit; text-decoration: none;">{{ article.title }}</a>
          </h3>
          <p class="news-card-excerpt">{{ article.excerpt_or_content | strip_html | truncate: 120 }}</p>
          <a href="{{ article.url }}" class="news-card-read-more">Read More</a>
        </div>
      </div>
    {%- else -%}
      {%- for i in (1..4) -%}
        <div class="news-card">
          <div class="news-card-image-link">
            {{ 'lifestyle-2' | placeholder_svg_tag: 'placeholder-svg news-card-image' }}
          </div>
          <div class="news-card-content">
            <h3 class="news-card-title">Example News Article</h3>
            <p class="news-card-excerpt">
              This is where the article excerpt will appear. Select a blog in the theme editor to show your posts.
            </p>
            <a href="#" class="news-card-read-more">Read More</a>
          </div>
        </div>
      {%- endfor -%}
    {%- endfor -%}
  </div>

  {%- if blog != blank and section.settings.show_see_all_button -%}
    <div class="news-scroller-footer">
      <a href="{{ blog.url }}" class="news-scroller-see-all">
        {{ section.settings.see_all_button_text }}
      </a>
    </div>
  {%- endif -%}
</div>

{% schema %}
{
  "name": "News Scroller",
  "tag": "section",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Latest News"
    },
    {
      "type": "blog",
      "id": "blog",
      "label": "Blog"
    },
    {
      "type": "range",
      "id": "posts_to_show",
      "min": 3,
      "max": 12,
      "step": 1,
      "label": "Number of posts to show",
      "default": 8
    },
    {
      "type": "checkbox",
      "id": "show_date",
      "label": "Show date",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_author",
      "label": "Show author",
      "default": false
    },
    {
      "type": "header",
      "content": "View All Button"
    },
    {
      "type": "checkbox",
      "id": "show_see_all_button",
      "label": "Show 'See All' button",
      "default": true
    },
    {
      "type": "text",
      "id": "see_all_button_text",
      "label": "Button text",
      "default": "See All News"
    },
    {
      "type": "header",
      "content": "Auto-scroll Settings"
    },
    {
      "type": "checkbox",
      "id": "autoscroll",
      "label": "Enable auto-scroll",
      "default": true
    },
    {
      "type": "range",
      "id": "autoscroll_duration",
      "min": 20,
      "max": 120,
      "step": 10,
      "unit": "s",
      "label": "Scroll duration (longer is slower)",
      "default": 60
    }
  ],
  "presets": [
    {
      "name": "News Scroller"
    }
  ]
}
{% endschema %}

{% if section.settings.autoscroll %}
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const scroller = document.querySelector(`.news-scroller-container[data-section-id="{{ section.id }}"]`);
      if (!scroller) return;

      setTimeout(() => {
        // Check if the content is wide enough to need scrolling
        const isScrollable = scroller.scrollWidth > 1200;
        
        if (!isScrollable) {
          scroller.classList.add('not-scrollable');
          return;
        }
        
        scroller.classList.add('is-scrollable');
        
        // --- 1. Measure BEFORE duplicating for cross-browser reliability ---
        const originalContentWidth = scroller.scrollWidth;
        const originalItems = Array.from(scroller.children);

        if (originalItems.length === 0) return;

        // --- 2. Duplicate items for infinite loop effect ---
        originalItems.forEach(item => {
          const clonedItem = item.cloneNode(true);
          clonedItem.setAttribute('aria-hidden', 'true');
          
          clonedItem.querySelectorAll('a').forEach(link => {
              link.setAttribute('tabindex', '-1');
              link.style.pointerEvents = 'none';
          });

          scroller.appendChild(clonedItem);
        });

        // --- 3. Auto-Scroll Logic ---
        let animationFrameId;
        let isPaused = false;
        const durationInSeconds = {{ section.settings.autoscroll_duration }};
        const speed = originalContentWidth / (durationInSeconds * 60);

        function scrollStep() {
          if (isPaused) return;

          // Use a more robust 'if' check for the loop
          if (scroller.scrollLeft >= originalContentWidth) {
            scroller.scrollLeft -= originalContentWidth;
          } else {
            scroller.scrollLeft += speed;
          }
          
          animationFrameId = requestAnimationFrame(scrollStep);
        }

        // --- 4. Click-and-Drag Scrolling Logic ---
        let isDown = false;
        let startX;
        let scrollLeft;
        let hasDragged = false;

        scroller.addEventListener('mousedown', (e) => {
          if (e.target.closest('a')) return;
          
          e.preventDefault();
          isDown = true;
          isPaused = true;
          hasDragged = false;
          scroller.classList.add('is-dragging');
          startX = e.pageX - scroller.offsetLeft;
          scrollLeft = scroller.scrollLeft;
          cancelAnimationFrame(animationFrameId);
        });

        const stopDragging = () => {
          if (!isDown) return;
          isDown = false;
          isPaused = false;
          scroller.classList.remove('is-dragging');
          requestAnimationFrame(scrollStep);
        };

        scroller.addEventListener('mouseleave', stopDragging);
        scroller.addEventListener('mouseup', stopDragging);

        scroller.addEventListener('mousemove', (e) => {
          if (!isDown) return;
          e.preventDefault();
          hasDragged = true;
          const x = e.pageX - scroller.offsetLeft;
          const walk = (x - startX) * 2;
          scroller.scrollLeft = scrollLeft - walk;
        });
        
        scroller.addEventListener('click', (e) => {
          if (hasDragged && !e.target.closest('a.news-card-read-more')) {
            e.preventDefault();
          }
        }, true);

        // Start the animation
        requestAnimationFrame(scrollStep);

      }, 100);
    });
  </script>
{% endif %}
